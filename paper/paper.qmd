---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - First author
  - Another author
thanks: "Code and data are available at: [https://github.com/RohanAlexander/starter_folder](https://github.com/RohanAlexander/starter_folder)."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#### Workspace setup ####
library(tidyverse)
library(GGally)
data <- read_csv(here::here("data/data.csv"))
```

```{r}
library(stringr)
data$price_numeric <- as.numeric(str_replace_all(data$price, "\\$|/100g", ""))
```
#Data

The preparation and manipulation of the original data is conducted using SQL [CITE SQL]. The steps to conduct the present analysis on the prepared data are carried out using the statistical programming language, R [CITE R].

The data for this analysis was obtained provided by Project Hammer [CITE DATA], and it contains data about product details (e.g. product names, brands, current prices, and old prices, and units for products) for 8 different grocery vendors (Voila, T&T, Loblaws, No Frills, Metro, Galleria, Walmart Canada, and Save-On-Foods). The data is collected through the process of screen-scraping website UIs from vendors within a neighbourhood in Toronto. Data from Project Hammer is available from February 28, 2024, and as this data is collected by extracting information from grocers' websites, it is possible to have missing data, which is more thoroughly addressed in [CROSS REFERENCE DISCUSSION SECTION]. Through the method of screen scraping, the original data aims to measure and reflect grocery vendor decisions and trends in product pricing. 

For this analysis, three vendors - Voila, Metro, and No Frills - are considered along with their respective pricing for products that are 100g. The "Price" variable for each vendor in this analysis reflects the current price of their products at the time in which the data was downloaded. The variable, "Units", represents the size of products measured using weight metrics (i.e. grams or kilograms) and counts (i.e. the number of items within a given product). In this case, a weight of 100g is selected to ensure consistency in units across products and vendors. 








```{r}

voila_data <- subset(data, vendor == "Voila")


plot_voila <- ggplot(voila_data, aes(x = price_numeric)) +
  geom_histogram(binwidth = 0.1, fill = "blue", color = "black", alpha = 0.7) +
  labs(title = "Voila",
       x = "price/100g",
       y = "frequence") +
  theme_minimal()


print(plot_voila)
```

```{r}


Metro_data <- subset(data, vendor == "Metro")


plot_Metro <- ggplot(Metro_data, aes(x = price_numeric)) +
  geom_histogram(binwidth = 0.1, fill = "blue", color = "black", alpha = 0.7) +
  labs(title = "Metro",
       x = "price/100g",
       y = "frequence") +
  theme_minimal()


print(plot_Metro)
```

```{r}


NoFrills_data <- subset(data, vendor == "NoFrills")


plot_NoFrills <- ggplot(NoFrills_data, aes(x = price_numeric)) +
  geom_histogram(binwidth = 0.1, fill = "blue", color = "black", alpha = 0.7) +
  labs(title = "NoFrills",
       x = "price/100g",
       y = "frequence") +
  theme_minimal()


print(plot_NoFrills)
```

```{r}
c1 <- voila_data$price_numeric
c2 <- Metro_data$price_numeric
c3 <- NoFrills_data$price_numeric

min_length <- min(length(c1), length(c2), length(c3))
voila_price <- c1[1:min_length]
metro_price <- c2[1:min_length]
nofrills_price <- c3[1:min_length]
data2 <- data.frame(voila_price, metro_price, nofrills_price)
pairs(data2)
```
